https://practice.geeksforgeeks.org/problems/generalised-fibonacci-numbers/0
Code:

#include<bits/stdc++.h>
#define int long long
using namespace std;
int a,b,c,n,m;
int ans[3][3];
void multiply(int arr1[3][3],int arr2[3][3]){
    int res[3][3];
    memset(res,0,sizeof(res));
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            for(int k=0;k<3;k++){
                res[i][j]+=arr1[i][k]*arr2[k][j];
                res[i][j]%=m;
            }
        }
    }
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            arr1[i][j]=res[i][j];
        }
    }
}
void power(int n){
 
 int M[3][3]={{a,b,1},{1,0,0},{0,0,1}};
 
   while(n){
        if(n%2)
       multiply(ans,M);
       multiply(M,M);
       n/=2;
   }
}
int32_t main()
 {
	int t;
	cin>>t;
	while(t--){

	cin>>a>>b>>c>>n>>m;
	a%=m,b%=m,c%=m;
	if(n<=2){
	    cout<<1%m<<"\n";
	    continue;
	}
	
	memset(ans,0,sizeof(ans));
	ans[0][0]=ans[1][1]=ans[2][2]=1;
	power(n-2);
	cout<<(ans[0][0] + ans[0][1] + ans[0][2]*c)%m<<"\n";
	
	}
	return 0;
}
