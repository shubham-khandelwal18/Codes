https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/
Code:

class Solution {
public:
    
    int find_high(vector<int>& nums, int target){
        int n=nums.size(),low=0,high=n-1,mid,ans;
        while(low<=high){
            mid=low+ (high - low)/2;
            if(nums[mid]==target){
                ans=mid;
                 low=mid+1;
            }
               
            else if(nums[mid]>target)
                high=mid-1;
            else
                low=mid+1;
        }
        return ans;
    }
    
    int find_low(vector<int>& nums, int target){
        int n=nums.size(),low=0,high=n-1,mid;
        if(n==0) return -1;
        while(low<high){
            mid=low+ (high - low)/2;
            if(nums[mid]==target)
                high=mid;
            else if(nums[mid]>target)
                high=mid-1;
            else
                low=mid+1;
        }
        return nums[low]==target?low:-1;
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        int low=find_low(nums,target);
        if(low==-1) return {-1,-1};
        int high=find_high(nums,target);
        return {low, high};
    }
};
