https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/
Code:

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        vector<vector<int>> v;
        if(root==NULL)
            return v;
        queue<TreeNode *> q;
        q.push(root);
        while(!q.empty()){
            int x = q.size();
             vector<int> u;
            for(int i=1;i<=x;i++){
                TreeNode *temp=q.front();
                q.pop();
                u.push_back(temp->val);
                if(temp->left)
                    q.push(temp->left);
                 if(temp->right)
                    q.push(temp->right);
                
            }
            v.push_back(u);
        }
       for(int i=0;i<v.size();i++)
           if(i%2)
               reverse(v[i].begin(),v[i].end());
        return v;
    }
};
