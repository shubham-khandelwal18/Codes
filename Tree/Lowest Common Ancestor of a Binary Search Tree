https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/
Code:

class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(!root || root==p || root==q) return root;
        if(p->val<root->val && q->val>root->val) return root;
        if(p->val>root->val && q->val<root->val) return root;
         if(p->val<root->val && q->val<root->val) 
        return lowestCommonAncestor(root->left,p,q);
         if(p->val>root->val && q->val>root->val) 
        return lowestCommonAncestor(root->right,p,q);
        return NULL;
    }
};
