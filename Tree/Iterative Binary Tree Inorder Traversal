https://leetcode.com/problems/binary-tree-inorder-traversal/
Code:

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
         vector<int> v;
    stack<TreeNode *> s;
    
  
    TreeNode *tmp1=root;
    while(!(tmp1==NULL && s.empty())){
       while(tmp1){
           s.push(tmp1);
           tmp1=tmp1->left;
       }
        tmp1=s.top();
        s.pop();
        v.push_back(tmp1->val);
    
        tmp1=tmp1->right;
        
    }
    return v;
    }
};
