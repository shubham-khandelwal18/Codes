https://www.interviewbit.com/problems/shortest-distance-in-a-maze/
Code:

int Solution::solve(vector<vector<int> > &A, vector<int> &B, vector<int> &C) {
    int m=A.size(),n=A[0].size();
    vector<vector<int>> dist(m,vector<int>(n,INT_MAX));
    dist[B[0]][B[1]]=0;
    set<pair<int,pair<int,int>>> s;
    s.insert({0,{B[0],B[1]}});
    int arr[5]={1,0,-1,0,1};
    while(!s.empty()){
        pair<int,pair<int,int>> p=*(s.begin());
        s.erase(s.begin());
        int a1=p.first,x=p.second.first,y=p.second.second;
        for(int i=0;i<4;i++){
            int x1=x+arr[i],y1=y+arr[i+1];
            int count=0;
            while(x1>=0 && x1<m && y1>=0 && y1<n && A[x1][y1]==0){
                x1=x1+arr[i];
                y1=y1+arr[i+1];
                count++;
            }
            x1-=arr[i];
            y1-=arr[i+1];
            if(count && dist[x1][y1]>a1+count){
                if(dist[x1][y1]!=INT_MAX)
                s.erase({dist[x1][y1],{x1,y1}});
                dist[x1][y1]=a1+count;
                s.insert({a1+count,{x1,y1}});
            }
        }
    }
    return dist[C[0]][C[1]]==INT_MAX?-1:dist[C[0]][C[1]];
}






















