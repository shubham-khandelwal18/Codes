https://practice.geeksforgeeks.org/problems/topological-sort/1
Code:

void dfs(vector<bool>& visited,vector<int>& indegree,vector<int> adj[],int x,int* a,int& p){
    visited[x]=true;
    a[p++]=x;
    for(int i=0;i<adj[x].size();i++){
        indegree[adj[x][i]]--;
        if(indegree[adj[x][i]]==0)
         dfs(visited,indegree,adj,adj[x][i],a,p);
    }
    
    
}
int* topoSort(int V, vector<int> adj[]) {
     vector<bool> visited(V);
     vector<int>  indegree(V,0);
      int *a=new int[V];
     int p=0;
     for(int i=0;i<V;i++){
         for(int j=0;j<adj[i].size();j++){
             indegree[adj[i][j]]++;
         }
     }
     for(int i=0;i<V;i++){
         if(visited[i]==false && indegree[i]==0){
             dfs(visited,indegree,adj,i,a,p);
         }
     }
     return a;
}
