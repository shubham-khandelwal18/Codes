https://leetcode.com/problems/combination-sum/
Code:

class Solution {
public:
    void combinationSumUtil(vector<vector<int>>& ans,vector<int>& temp,int start,vector<int>& candidates, int target){
    if(target<0) return ;
    if(target==0){
        ans.push_back(temp);
        return ;
    }
    int n=candidates.size();
    for(int i=start;i<n;i++){
         temp.push_back(candidates[i]);
         combinationSumUtil(ans,temp,i,candidates,target-candidates[i]);
         temp.pop_back();
    }
    
}
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
       
        vector<vector<int> > ans;
        vector<int> temp;
        combinationSumUtil(ans,temp,0,candidates,target);
        return ans;
    }
};
