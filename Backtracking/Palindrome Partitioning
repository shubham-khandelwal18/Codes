https://leetcode.com/problems/palindrome-partitioning/
Code:

class Solution {
public:
    bool ispalindrome(string s,int l,int r){
        while(l<r){
            if(s[l]!=s[r]) return false;
            l++;
            r--;
        }
        return true;
    }
    void partitionUtil(string s,int start,vector<string>& temp,vector<vector<string>>& ans)     {
        int n=s.length();
        if(start==n){
            ans.push_back(temp);
            return ;
        }
        for(int i=start;i<n;i++){
            if(ispalindrome(s,start,i)){
                temp.push_back(s.substr(start,i-start+1));
                partitionUtil(s,i+1,temp,ans);
                temp.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
      vector<vector<string>> ans;
        vector<string> temp;
        partitionUtil(s,0,temp,ans);
        return ans;
    }
};
