https://leetcode.com/problems/reverse-linked-list/
Code:

Method 1: Iterative
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode *curr,*prev,*nxt;
        curr=head;prev=NULL;
        while(curr!=NULL){
            nxt= curr->next;
            curr->next=prev;
            prev=curr;
            curr=nxt;
        }
        return prev;
    }
};

Method 2: Recursive
class Solution {
public:
    
    ListNode* reverseListrec(ListNode* cur,ListNode* prev){
       
        if(cur==NULL) {
            return prev;
        }
        ListNode* next=cur->next;
        cur->next=prev;
        
       return reverseListrec(next,cur);
        
    }
    ListNode* reverseList(ListNode* head) {
         return reverseListrec(head,NULL);
    }
};
