https://www.interviewbit.com/problems/n-max-pair-combinations/
Code:

vector<int> Solution::solve(vector<int> &A, vector<int> &B) {
    sort(A.begin(),A.end());
    sort(B.begin(),B.end());
    vector<int> ans;
    map<pair<int,int>,int> m;
    if(A.empty())
     return ans;
     int N=A.size(),i1=N-1,i2=N-1;
     priority_queue<pair<int,pair<int , int >>> pq;
     pq.push({A[i1]+A[i2],{i1,i2}});
     m[{N-1,N-1}]=1;
     while(N--){
         auto i=pq.top();
         pq.pop();
         ans.push_back(i.first);
         int x=i.second.first,y=i.second.second;
         if(m[{x-1,y}]==0){
         pq.push({A[x-1]+B[y],{x-1,y}});
         m[{x-1,y}]=1;
         }
          if(m[{x,y-1}]==0){
         pq.push({A[x]+B[y-1],{x,y-1}});
         m[{x,y-1}]=1;
          }
     }
    return ans;
}
