https://leetcode.com/problems/3sum/
Code:

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
         vector<vector<int>> ans;
         if(nums.size() < 2)
            return ans;
        sort(nums.begin(),nums.end());
        int n=nums.size(),j,k;
         for(int i=0;i<n-2;i++){
             if(i>0 && nums[i-1] == nums[i])
                continue;
                j=i+1;k=n-1;
              while(j<k){
                  int sum=nums[i]+nums[j]+nums[k];
                  vector<int> v={nums[i],nums[j],nums[k]};
                  if(sum==0 ){
                      ans.push_back(v);
                      while(j<k && nums[j]==nums[j+1]) j++;
                      while(j<k && nums[k]==nums[k-1]) k--;
                      
                      j++;
                      k--;
                  }
                  else if(sum>0)
                      k--;
                  else
                      j++;
              }
            
          }
        return ans;
    }
};
