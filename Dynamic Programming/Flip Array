https://www.interviewbit.com/problems/flip-array/
Code:

int Solution::solve(const vector<int> &A) {
    unordered_map<int,int> dp[2];
    int sum=0,n=A.size(),flag=1,ans=n;
    for(int i=0;i<n;i++) sum+=A[i];
    for(int i=-sum;i<=sum;i++) dp[0][i]=INT_MAX;
    dp[0][0]=0;
    for(int i=1;i<=n;i++){
        for(int j=-sum;j<=sum;j++){
            dp[flag][j]=INT_MAX;
            if(j-A[i-1]>=-sum && j-A[i-1]<=sum)
            dp[flag][j]=dp[flag^1][j-A[i-1]];
            if(j+A[i-1]>=-sum && j+A[i-1]<=sum && dp[flag^1][j+A[i-1]]!=INT_MAX)
            dp[flag][j]=min(dp[flag][j],1+dp[flag^1][j+A[i-1]]);
        }
        flag=1^flag;
    }
    
    for(int i=0;i<sum;i++) if(dp[flag^1][i]!=INT_MAX) return dp[flag^1][i];
    return n-1;
}
